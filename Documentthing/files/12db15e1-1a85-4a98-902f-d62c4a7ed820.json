{"f655d2aa-1ccc-4c17-ad72-b8c20869ded8":{"id":"f655d2aa-1ccc-4c17-ad72-b8c20869ded8","value":[{"id":"f1e04ce8-2209-4a38-bae6-b4712890b230","type":"heading-one","children":[{"text":"Introduction Updating content"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":0,"depth":0}},"6a6d1721-60ba-4478-89c6-296a33d255df":{"id":"6a6d1721-60ba-4478-89c6-296a33d255df","value":[{"id":"a2dfd778-5c56-4ae0-abf8-5f32c4a412e8","type":"heading-two","children":[{"text":"Zustand is the most popular state management library"}],"props":{"nodeType":"block"}}],"type":"HeadingTwo","meta":{"order":1,"depth":0}},"1cddf780-9569-4948-9a0e-f930de868097":{"id":"1cddf780-9569-4948-9a0e-f930de868097","value":[{"id":"75029edd-860e-4e90-8406-ade806c4224d","type":"paragraph","children":[{"text":"A small, fast, and scalable bearbones state management solution. Zustand has a comfy API based on hooks. It isn't boilerplate or opinionated, but has enough convention to be explicit and flux-like. Its fun to have such ."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":2,"depth":0}},"5db1aa66-74be-4bec-b589-4d8fbc431f2a":{"id":"5db1aa66-74be-4bec-b589-4d8fbc431f2a","value":[{"id":"064fdcb4-f589-4b97-8cd0-3acd87fc6b82","type":"paragraph","children":[{"text":""}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":3,"depth":0}},"7af50dff-d4b0-4998-9391-1a7304218d01":{"id":"7af50dff-d4b0-4998-9391-1a7304218d01","value":[{"id":"24f63ceb-305c-470a-b9dd-ea5db83d73a5","type":"paragraph","children":[{"text":"Don't disregard it because it's cute, it has claws! Lots of time was spent to deal with common pitfalls, like the dreaded "},{"id":"a986999f-a768-48d4-91f1-84f0f802f125","type":"link","props":{"url":"https://react-redux.js.org/api/hooks#stale-props-and-zombie-children","target":"_self","rel":"noopener noreferrer","title":"zombie child problem","nodeType":"inline"},"children":[{"text":"zombie child problem"}]},{"text":", "},{"id":"12eaa5ae-e930-4d96-8591-b1daaf4d811b","type":"link","props":{"url":"https://github.com/bvaughn/rfcs/blob/useMutableSource/text/0000-use-mutable-source.md","target":"_self","rel":"noopener noreferrer","title":"React concurrency","nodeType":"inline"},"children":[{"text":"React concurrency"}]},{"text":", and "},{"id":"2b8f1a2b-a560-462c-995e-ca2e75f79bd8","type":"link","props":{"url":"https://github.com/facebook/react/issues/13332","target":"_self","rel":"noopener noreferrer","title":"context loss","nodeType":"inline"},"children":[{"text":"context loss"}]},{"text":" between mixed renderers. It may be the one state manager in the React space that gets all of these right."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":4,"depth":0}},"8ffe17c3-0b31-4c59-a6f4-95f335b410d1":{"id":"8ffe17c3-0b31-4c59-a6f4-95f335b410d1","value":[{"id":"fe50ce80-800c-4b49-98eb-3d4cf6bf0c02","type":"paragraph","children":[{"text":"You can try a live demo "},{"id":"b88bd772-0d96-4f6f-ae10-5ecc3b20a37f","type":"link","props":{"url":"https://codesandbox.io/p/sandbox/dazzling-moon-itop4","target":"_self","rel":"noopener noreferrer","title":"here","nodeType":"inline"},"children":[{"text":"here"}]},{"text":"."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":5,"depth":0}},"fea73b59-7fe6-4115-875e-06bbe55fd497":{"id":"fea73b59-7fe6-4115-875e-06bbe55fd497","value":[{"id":"0948f0b4-34cc-4d89-ae98-307ceec328a7","type":"heading-one","children":[{"text":"Installation"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":6,"depth":0}},"e7e65a0f-9254-440b-acce-0ecd226a057b":{"id":"e7e65a0f-9254-440b-acce-0ecd226a057b","value":[{"id":"933ee658-4af2-46d2-b31b-b2a48dd3caec","type":"paragraph","children":[{"text":"Zustand is available as a package on NPM for use:"}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":7,"depth":0}},"e5a8086e-09d0-4d08-9fff-f6df34b43a3c":{"id":"e5a8086e-09d0-4d08-9fff-f6df34b43a3c","value":[{"children":[{"text":"# NPM\nnpm install zustand\n# Or, use any package manager of your choice.\n"}],"type":"code","id":"be56f775-7c17-47d9-8a94-f5a66a69a1d0","props":{"language":"javascript","theme":"VSCode","nodeType":"void"}}],"type":"Code","meta":{"order":8,"depth":0}},"91186b40-3fc4-4f6d-a165-34f1661d6d1a":{"id":"91186b40-3fc4-4f6d-a165-34f1661d6d1a","value":[{"id":"cf25b3ed-71eb-49b2-beea-27ef9c6f3043","type":"heading-one","children":[{"text":"First create a store"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":9,"depth":0}},"14bc5cb6-77fc-4a66-bdd8-72c356dbb84f":{"id":"14bc5cb6-77fc-4a66-bdd8-72c356dbb84f","value":[{"id":"a85d4bb9-3831-4710-a4bc-034b7f7673a4","type":"paragraph","children":[{"text":"Your store is a hook! You can put anything in it: primitives, objects, functions. The "},{"text":"set ","code":true},{"text":"function merges the state."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":10,"depth":0}},"dc8949d0-dfa8-4038-b7ba-260a97485ce4":{"id":"dc8949d0-dfa8-4038-b7ba-260a97485ce4","value":[{"children":[{"text":"import { create } from 'zustand'\n\nconst useStore = create((set) => ({\n  bears: 0,\n  increasePopulation: () => set((state) => ({ bears: state.bears + 1 })),\n  removeAllBears: () => set({ bears: 0 }),\n  updateBears: (newBears) => set({ bears: newBears }),\n}))\n"}],"type":"code","id":"062148ff-717d-44e5-8f3b-f82f0e713897","props":{"language":"javascript","theme":"VSCode","nodeType":"void"}}],"type":"Code","meta":{"order":11,"depth":0}},"b441c37e-4ccf-4dc6-90d0-e001f4013953":{"id":"b441c37e-4ccf-4dc6-90d0-e001f4013953","value":[{"id":"e6467552-c25a-4351-ae08-e85e52bd6d4b","type":"heading-one","children":[{"text":"Then bind your components, and that's it!"}],"props":{"nodeType":"block"}}],"type":"HeadingOne","meta":{"order":12,"depth":0}},"cd8f7b36-14b5-433b-ae13-386cf902ddd3":{"id":"cd8f7b36-14b5-433b-ae13-386cf902ddd3","value":[{"id":"51a47387-8643-4ce6-bdd6-dca588b529c6","type":"paragraph","children":[{"text":"You can use the hook anywhere, without the need of providers. Select your state and the consuming component will re-render when that state changes."}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":13,"depth":0}},"77e58874-ff05-4961-87c8-dc4bcfc542f9":{"id":"77e58874-ff05-4961-87c8-dc4bcfc542f9","value":[{"children":[{"text":"function BearCounter() {\n  const bears = useStore((state) => state.bears)\n  return <h1>{bears} around here...</h1>\n}\n\nfunction Controls() {\n  const increasePopulation = useStore((state) => state.increasePopulation)\n  return <button onClick={increasePopulation}>one up</button>\n}\n"}],"type":"code","id":"836abf4a-3030-4a83-9afd-4fb3c19f3d8e","props":{"language":"javascript","theme":"VSCode","nodeType":"void"}}],"type":"Code","meta":{"order":14,"depth":0}},"aa8efcdd-d994-46ab-a93e-b23f7e38ef06":{"id":"aa8efcdd-d994-46ab-a93e-b23f7e38ef06","value":[{"id":"0a1285e4-e7bc-4e09-954d-afb901935cc8","type":"paragraph","children":[{"text":"In next section we will learn about managing state in zustand"}],"props":{"nodeType":"block"}}],"type":"Paragraph","meta":{"order":15,"depth":0}}}